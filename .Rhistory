data.table()
glm1_mu <- glm1_emm[, response]
# make effect smaller for power
effect <- 0.5
glm1_mu[2] <- glm1_mu[1]*effect
glm1_alpha <- gamma.shape(glm1)[[1]]
glm1_beta <- glm1_alpha/glm1_mu # = rate or 1/scale
# denominator -- heart area
glm2 <- glm(heart_area ~ genotype,
family = Gamma(link = "log"),
data = fig2d)
glm2_emm <- emmeans(glm2, specs = "genotype", type = "response") |>
summary() |>
data.table()
glm2_mu <- glm2_emm[, response]
glm2_alpha <- gamma.shape(glm2)[[1]]
glm2_beta <- glm2_alpha/glm2_mu # = rate or 1/scale
num_params_cn <- calc_theory(Dist = "Gamma", params = c(glm1_alpha, glm1_beta[1])) # fibrotic area
denom_params_cn <- calc_theory(Dist = "Gamma", params = c(glm2_alpha, glm2_beta[1])) # heart area
num_params_ko <- calc_theory(Dist = "Gamma", params = c(glm1_alpha, glm1_beta[2])) # fibrotic area
denom_params_ko <- calc_theory(Dist = "Gamma", params = c(glm2_alpha, glm2_beta[2])) # heart area
fd <- data.table(
genotype = rep(c("Ctrl", "Cpt1biKO"), fig2d_summary$N),
fibrotic_area = as.numeric(NA),
heart_area = as.numeric(NA)
)
power_matrix <- matrix(nrow = total_iter, ncol = 4)
colnames(power_matrix) <- c("mwu","lm", "qb", "gamma")
type1_matrix <- matrix(nrow = total_iter, ncol = 4)
colnames(type1_matrix) <- c("mwu","lm", "qb", "gamma")
seed_starter_sim <- 0
for(iter_set in 1:iter_sets){
# power
# make effect size smaller so power < 1
seed_starter_sim <- seed_starter_sim + 1
fake_cn <- get_clean_proportion_data(
n_sample = fig2d_summary[1, N],
n_cols = n_iter,
alpha_num = glm1_alpha,
beta_num = glm1_beta[1],
alpha_denom = glm2_alpha,
beta_denom = glm2_beta[1],
rho_obs = r_obs,
seed_start = seed_starter_sim)
seed_starter_sim <- seed_starter_sim + 1
fake_ko <- get_clean_proportion_data(
n_sample = fig2d_summary[2, N],
n_cols = n_iter,
alpha_num = glm1_alpha,
beta_num = glm1_beta[2],
alpha_denom = glm2_alpha,
beta_denom = glm2_beta[2],
rho_obs = r_obs,
seed_start = seed_starter_sim)
fibrotic_area_mat <- rbind(fake_cn[["numerator"]],
fake_ko[["numerator"]])
heart_area_mat <- rbind(fake_cn[["denominator"]],
fake_ko[["denominator"]])
fibrotic_prop_mat <- rbind(fake_cn[["proportion"]],
fake_ko[["proportion"]])
for(iter in 1:n_iter){
sim_i <- n_iter*(iter_set - 1) + iter
# fake data
fd[, fibrotic_area := fibrotic_area_mat[, iter]]
fd[, heart_area := heart_area_mat[, iter]]
fd[, fibrotic_prop := fibrotic_prop_mat[, iter]]
# Mann Whitney
power_matrix[sim_i, "mwu"] <- wilcox.test(fibrotic_prop ~ genotype, data = fd)$p.value
# lm
m_lm <- lm(fibrotic_prop ~ genotype, data = fd)
power_matrix[sim_i, "lm"] <- coef(summary(m_lm))["genotypeCtrl", "Pr(>|t|)"]
# glm bin
m_qb <- glm(fibrotic_prop ~ genotype,
family = quasibinomial,
data = fd)
power_matrix[sim_i, "qb"] <- coef(summary(m_qb))["genotypeCtrl", "Pr(>|t|)"]
# glm qp
m_gamma <- glm(fibrotic_area ~ genotype + offset(log(heart_area)),
family = Gamma(link = "log"),
data = fd)
power_matrix[sim_i, "gamma"] <- coef(summary(m_gamma))["genotypeCtrl", "Pr(>|t|)"]
#       do_plot <- FALSE
#       if(do_plot){
# m_gamma_emm <- emmeans(m_gamma, specs = "genotype", type = "response")
# m_gamma_pairs <- contrast(m_gamma_emm, method = "revpairwise") |>
#   summary(infer = TRUE)
#        plot_response(m_qb, m_qb_emm, m_qb_pairs)
# ggplot(data = fd,
#        aes(x = genotype,
#            y = fibrotic_prop,
#            color = genotype)) +
#   geom_point()
#       }
}
# type I
seed_starter_sim <- seed_starter_sim + 1
fake_cn <- get_clean_proportion_data(
n_sample = fig2d_summary[1, N],
n_cols = n_iter,
alpha_num = glm1_alpha,
beta_num = glm1_beta[1],
alpha_denom = glm2_alpha,
beta_denom = glm2_beta[1],
rho_obs = r_obs,
seed_start = seed_starter_sim)
seed_starter_sim <- seed_starter_sim + 1
fake_ko <- get_clean_proportion_data(
n_sample = fig2d_summary[2, N],
n_cols = n_iter,
alpha_num = glm1_alpha,
beta_num = glm1_beta[1],
alpha_denom = glm2_alpha,
beta_denom = glm2_beta[1],
rho_obs = r_obs,
seed_start = seed_starter_sim)
fibrotic_area_mat <- rbind(fake_cn[["numerator"]],
fake_ko[["numerator"]])
heart_area_mat <- rbind(fake_cn[["denominator"]],
fake_ko[["denominator"]])
fibrotic_prop_mat <- rbind(fake_cn[["proportion"]],
fake_ko[["proportion"]])
for(iter in 1:n_iter){
sim_i <- n_iter*(iter_set - 1) + iter
# fake data
fd[, fibrotic_area := fibrotic_area_mat[, iter]]
fd[, heart_area := heart_area_mat[, iter]]
fd[, fibrotic_prop := fibrotic_prop_mat[, iter]]
# Mann Whitney
type1_matrix[sim_i, "mwu"] <- wilcox.test(fibrotic_prop ~ genotype, data = fd)$p.value
# lm
m_lm <- lm(fibrotic_prop ~ genotype, data = fd)
type1_matrix[sim_i, "lm"] <- coef(summary(m_lm))["genotypeCtrl", "Pr(>|t|)"]
# glm bin
m_qb <- glm(fibrotic_prop ~ genotype,
family = quasibinomial,
data = fd)
type1_matrix[sim_i, "qb"] <- coef(summary(m_qb))["genotypeCtrl", "Pr(>|t|)"]
# glm qp
m_gamma <- glm(fibrotic_area ~ genotype + offset(log(heart_area)),
family = Gamma(link = "log"),
data = fd)
type1_matrix[sim_i, "gamma"] <- coef(summary(m_gamma))["genotypeCtrl", "Pr(>|t|)"]
}
}
saveRDS(power_matrix, "power_matrix.Rds")
saveRDS(type1_matrix, "type1_matrix.Rds")
}else{
power_matrix <- readRDS("power_matrix.Rds")
type1_matrix <- readRDS("type1_matrix.Rds")
}
pless <- function(x, alpha = 0.05){
stat <- sum(x <= alpha)/length(x)
return(stat)
}
res <- data.table(
Test = c("Mann-Whitney", "Linear Model/T-test", "Quasibinomial", "Gamma offset"),
Power = apply(power_matrix, 2, pless, alpha = 0.05),
"Type I" = apply(type1_matrix, 2, pless, alpha = 0.05)
)
res |>
kable(digits = c(1,2,3)) |>
kable_styling(full_width = FALSE)
m3_emm_dt <- m3_emm |>
summary() |>
data.table()
m3_pairs_dt <- data.table(m3_pairs)
common_factor <- mean(fig2d$heart_area)
m3_emm_dt[, mean := response/common_factor * 100]
m3_emm_dt[, lo := lower.CL/common_factor * 100]
m3_emm_dt[, hi := upper.CL/common_factor * 100]
# check to make sure that scaled mean is equal to the mean fibrotic_area_proportions
# m3_emm_dt
# means_table
gg <- ggplot(data = fig2d,
aes(x = genotype,
y = fibrotic_area_percent,
color = genotype)) +
geom_sina(size = 2,
maxwidth = 0.5,
show.legend = FALSE) +
geom_errorbar(data = m3_emm_dt,
aes(x = genotype,
y = mean,
ymin = lo,
ymax = hi),
width = 0.05,
color = "black") +
geom_point(data = m3_emm_dt,
aes(x = genotype,
y = mean),
size = 3,
color = "black") +
ylab("Fibrotic Area (% of Heart Area)") +
scale_color_manual(values = pal_okabe_ito_2) +
theme_pubr() +
theme(axis.title.x = element_blank()) +
NULL
# add p-values
m3_pairs_dt[, group1 := "Ctrl"]
m3_pairs_dt[, group2 := "Cpt1biKO"]
m3_pairs_dt[, p := p.value |>
p_round(digits = 2) |>
p_format(digits = 2, accuracy = 1e-03, add.p = TRUE)]
maxy <- fig2d[, max(fibrotic_area_percent)]
miny <- fig2d[, min(fibrotic_area_percent)]
m3_pairs_dt[, y.position := maxy + 0.05*(maxy - miny)]
gg <- gg +
stat_pvalue_manual(
data = m3_pairs_dt,
label = "p",
tip.length = 0.001)
gg
save_it <- FALSE
if(save_it){
out_fig <- "fig5c_ggplot.png"
out_path <- here("figs", data_from, out_fig)
ggsave(out_path)
}
m3_emm_dt <- m3_emm |>
summary() |>
data.table()
m3_pairs_dt <- data.table(m3_pairs)
common_factor <- mean(fig2d$heart_area)
m3_emm_dt[, mean := response/common_factor * 100]
m3_emm_dt[, lo := lower.CL/common_factor * 100]
m3_emm_dt[, hi := upper.CL/common_factor * 100]
# check to make sure that scaled mean is equal to the mean fibrotic_area_proportions
m3_emm_dt
means_table
names(fig2d)
fig2d[, .(fibrotic_area_percent = mean(fibrotic_area_percent)),
by = .(genotype)]
m3_emm_dt
m3_emm_dt[, .SD, .SDcols = c("genotype", "mean")]
plot_response(lm2, lm2_emm, lm2_pairs)
lm1 <- lm(fibrotic_area ~ genotype, data = fig2d)
lm1_emm <- emmeans(lm1, specs = "genotype")
lm1_pairs <- contrast(lm1_emm, method = "revpairwise") |>
summary(infer = TRUE)
lm1_pairs |>
kable() |>
kable_styling(full_width = FALSE)
gg1 <- plot_response(lm1, lm1_emm, lm1_pairs,
y_label = "Fibrotic Area")
lm2 <- lm(fibrotic_area_percent ~ genotype, data = fig2d)
lm2_emm <- emmeans(lm2, specs = "genotype")
lm2_pairs <- contrast(lm2_emm, method = "revpairwise") |>
summary(infer = TRUE)
lm2_pairs |>
kable() |>
kable_styling(full_width = FALSE)
gg2 <- plot_response(lm2, lm2_emm, lm2_pairs,
y_label = "Percent Fibrotic Area")
# contrast_table <- rbind(lm1_pairs, lm2_pairs)
# contrast_table |>
#   kable(digits = 4) |>
#   kable_styling() |>
#   pack_rows("linear model/t-test of fibrotic area", 1, 1) |>
#   pack_rows("linear model/t-test of fibrotic area as percent of total area", 2, 2)
plot_grid(gg1, gg2, ncol = 2)
lm1 <- lm(fibrotic_area ~ genotype, data = fig2d)
lm1_emm <- emmeans(lm1, specs = "genotype")
lm1_pairs <- contrast(lm1_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg1 <- plot_response(lm1, lm1_emm, lm1_pairs,
y_label = "Fibrotic Area")
lm2 <- lm(fibrotic_area_percent ~ genotype, data = fig2d)
lm2_emm <- emmeans(lm2, specs = "genotype")
lm2_pairs <- contrast(lm2_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg2 <- plot_response(lm2, lm2_emm, lm2_pairs,
y_label = "Percent Fibrotic Area")
# contrast_table <- rbind(lm1_pairs, lm2_pairs)
# contrast_table |>
#   kable(digits = 4) |>
#   kable_styling() |>
#   pack_rows("linear model/t-test of fibrotic area", 1, 1) |>
#   pack_rows("linear model/t-test of fibrotic area as percent of total area", 2, 2)
plot_grid(gg1, gg2, ncol = 2)
lm1 <- lm(fibrotic_area ~ genotype, data = fig2d)
lm1_emm <- emmeans(lm1, specs = "genotype")
lm1_pairs <- contrast(lm1_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg1 <- plot_response(lm1, lm1_emm, lm1_pairs,
y_label = "Fibrotic Area",
palette = "pal_okabe_ito_blue")
lm2 <- lm(fibrotic_area_percent ~ genotype, data = fig2d)
lm2_emm <- emmeans(lm2, specs = "genotype")
lm2_pairs <- contrast(lm2_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg2 <- plot_response(lm2, lm2_emm, lm2_pairs,
y_label = "Percent Fibrotic Area")
# contrast_table <- rbind(lm1_pairs, lm2_pairs)
# contrast_table |>
#   kable(digits = 4) |>
#   kable_styling() |>
#   pack_rows("linear model/t-test of fibrotic area", 1, 1) |>
#   pack_rows("linear model/t-test of fibrotic area as percent of total area", 2, 2)
plot_grid(gg1, gg2, ncol = 2)
lm1 <- lm(fibrotic_area ~ genotype, data = fig2d)
lm1_emm <- emmeans(lm1, specs = "genotype")
lm1_pairs <- contrast(lm1_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg1 <- plot_response(lm1, lm1_emm, lm1_pairs,
y_label = "Fibrotic Area",
palette = "pal_okabe_ito_blue")
lm2 <- lm(fibrotic_area_percent ~ genotype, data = fig2d)
lm2_emm <- emmeans(lm2, specs = "genotype")
lm2_pairs <- contrast(lm2_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg2 <- plot_response(lm2, lm2_emm, lm2_pairs,
y_label = "Percent Fibrotic Area",
palette = "pal_okabe_ito_blue")
# contrast_table <- rbind(lm1_pairs, lm2_pairs)
# contrast_table |>
#   kable(digits = 4) |>
#   kable_styling() |>
#   pack_rows("linear model/t-test of fibrotic area", 1, 1) |>
#   pack_rows("linear model/t-test of fibrotic area as percent of total area", 2, 2)
plot_grid(gg1, gg2, ncol = 2)
m3_pairs |>
kable(digits = c(1,7,3,1,2,2,1,2,6)) |>
kable_styling(full_width = FALSE)
gg <- ggplot(data = fig2d,
aes(x = genotype,
y = fibrotic_area_percent,
color = genotype)) +
geom_sina(size = 2,
maxwidth = 0.5,
show.legend = FALSE) +
geom_errorbar(data = m3_emm_dt,
aes(x = genotype,
y = mean,
ymin = lo,
ymax = hi),
width = 0.05,
color = "black") +
geom_point(data = m3_emm_dt,
aes(x = genotype,
y = mean),
size = 3,
color = "black") +
ylab("Fibrotic Area (% of Heart Area)") +
scale_color_manual(values = pal_okabe_ito_2) +
theme_pubr() +
theme(axis.title.x = element_blank()) +
NULL
# add p-values
m3_pairs_dt[, group1 := "Ctrl"]
m3_pairs_dt[, group2 := "Cpt1biKO"]
m3_pairs_dt[, p := p.value |>
p_round(digits = 2) |>
p_format(digits = 2, accuracy = 1e-03, add.p = TRUE)]
maxy <- fig2d[, max(fibrotic_area_percent)]
miny <- fig2d[, min(fibrotic_area_percent)]
m3_pairs_dt[, y.position := maxy + 0.05*(maxy - miny)]
gg <- gg +
stat_pvalue_manual(
data = m3_pairs_dt,
label = "p",
tip.length = 0.001)
gg
save_it <- TRUE
if(save_it){
out_fig <- "fig2d_ggplot.png"
out_path <- here("figs", data_from, out_fig)
ggsave(out_path)
}
res <- data.table(
Test = c("Mann-Whitney", "Linear Model/T-test", "Quasibinomial", "Gamma offset"),
Power = apply(power_matrix, 2, pless, alpha = 0.05),
"Type I" = apply(type1_matrix, 2, pless, alpha = 0.05)
)
res |>
kable(digits = c(1,2,3)) |>
kable_styling(full_width = FALSE)
.84/.71
75/71
knitr::opts_chunk$set(echo = TRUE)
# wrangling packages
library(here) # here makes a project transportable
library(janitor) # clean_names
library(readxl) # read excel, duh!
library(writexl) # write excel, duh!
library(data.table) # magical data frames
library(magrittr) # pipes
library(stringr) # string functions
library(forcats) # factor functions
# analysis packages
library(emmeans) # the workhorse for inference
library(nlme) # gls and some lmm
library(lme4) # linear mixed models
library(lmerTest) # linear mixed model inference
library(afex) # ANOVA linear models
library(glmmTMB) # generalized linear models
library(MASS) # negative binomial and some other functions
library(car) # model checking and ANOVA
library(DHARMa) # model checking
library(mvtnorm)
library(MHTdiscrete) # sidak
# graphing packages
library(ggsci) # color palettes
library(ggpubr) # publication quality plots
library(ggforce) # better jitter
library(cowplot) # combine plots
library(knitr) # kable tables
library(kableExtra) # kable_styling tables
# ggplot_the_model.R packages not loaded above
library(insight)
library(lazyWeave)
# use here from the here package
here <- here::here
# use clean_names from the janitor package
clean_names <- janitor::clean_names
# use transpose from data.table
transpose <- data.table::transpose
# load functions used by this text written by me
# ggplot_the_model.R needs to be in the folder "R"
# if you didn't download this and add to your R folder in your
# project, then this line will cause an error
source_path <- here("R", "ggplot_the_model.R")
source(source_path)
data_folder <- "data from"
image_folder <- "images"
output_folder <- "output"
fig8c <- read_excel(file_path,
sheet = "Fig 8C",
range = "F1:I164",
col_names = TRUE) |>
data.table()
file_path
data_from <- "ER calcium depletion as a key driver for impaired ER-to-mitochondria calcium transfer and mitochondrial dysfunction in Wolfram syndrome"
file_name <- "Source data for Figures and Table.xlsx"
file_path <- here(data_folder, data_from, file_name)
fig8c <- read_excel(file_path,
sheet = "Fig 8C",
range = "F1:I164",
col_names = TRUE) |>
data.table()
fig8c[, prep := paste("prep_", rep(1:14, each = 10))]
fig8c <- read_excel(file_path,
sheet = "Fig 8C",
range = "F1:I164",
col_names = TRUE) |>
data.table() |>
na.omit()
fig8c[, prep := paste("prep_", rep(1:14, each = 10))]
View(fig8c)
data_from <- "ER calcium depletion as a key driver for impaired ER-to-mitochondria calcium transfer and mitochondrial dysfunction in Wolfram syndrome"
file_name <- "Source data for Figures and Table.xlsx"
file_path <- here(data_folder, data_from, file_name)
fig8c_wide <- read_excel(file_path,
sheet = "Fig 8C",
range = "F1:I164",
col_names = TRUE) |>
data.table() |>
na.omit()
# assume blank rows separate preps. each prep has 10 technical replicates
fig8c_wide[, prep := paste("prep_", rep(1:14, each = 10))]
fig8c <- melt(fig8c_wide,
id.vars = c("prep"),
variable.name = "treatment",
value.name = "number_with_mitochondria")
# output as clean excel file
fileout_name <- "fig8c-ER calcium depletion as a key driver for impaired ER-to-mitochondria calcium transfer and mitochondrial dysfunction in Wolfram syndrome.xlsx"
fileout_path <- here(data_folder, data_from, fileout_name)
write_xlsx(fig8c, fileout_path)
View(fig8c)
m0 <- lm(number_with_mitochondria ~ treatment, data = fig8c)
coef(summary(m0))
lmm1 <- lmer(number_with_mitochondria ~ treatment + (1 | prep), data = fig8c)
lmm1_emm <- emmeans(lmm1, specs = "treatment")
lmm1_pairs <- contrast(lmm1_emm,
method = "revpairwise")
lmm1_pairs
plot_the_response(lmm1, lmm1_emm, lmm1_pairs)
VarCorr(lmm1)
m1 <- lm(number_with_mitochondria ~ treatment * prep, data = fig8c)
ggplot_the_response
m1 <- lm(number_with_mitochondria ~ treatment * prep, data = fig8c)
m1_emm <- emmeans(m1, specs = c("treatment", "prep"))
m1_pairs <- contrast(m1_emm,
method = "revpairwise")
ggplot_the_response(m1, m1_emm, m1_pairs,contrast_rows = "none")
ggplot_the_response(m1, m1_emm, m1_pairs)
m1_pairs
m1 <- lm(number_with_mitochondria ~ treatment * prep, data = fig8c)
m1_emm <- emmeans(m1, specs = c("treatment", "prep"))
m1_pairs <- contrast(m1_emm,
method = "revpairwise",
adjust = "none")
ggplot_the_response(m1, m1_emm, m1_pairs)
ggplot(data = fig8c,
aes(x = treatment,
y = number_with_mitochondria,
color = prep)) +
geom_point()
ggplot(data = fig8c,
aes(x = treatment,
y = number_with_mitochondria,
color = prep)) +
geom_jitter()
ggplot(data = fig8c,
aes(x = treatment,
y = number_with_mitochondria,
color = prep)) +
geom_point(position = position_jitterdodge())
ggplot(data = fig8c,
aes(x = treatment,
y = number_with_mitochondria,
color = prep)) +
geom_point(position = position_jitterdodge(jitter.width = 0))
