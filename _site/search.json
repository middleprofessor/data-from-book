[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Data From began in 2018 as the name of a project that I used to collect example data sets for my Applied Biostatics class at the University of Southern Maine and for the R Markdown book Statistics for the Experimental Biologist that I was creating for this class.\n\nJeffrey A. Walker\nDepartment of Biological Sciences\nUniversity of Southern Maine\nwalker at maine dot edu\n\n\nOther sites\nStatistics for the Experimental Biologist\nBike Geometry Project – Exploration and classification of gravel bike geometry"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html",
    "title": "xxx",
    "section": "",
    "text": "xxx"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#vital-info",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#vital-info",
    "title": "xxx",
    "section": "Vital info",
    "text": "Vital info\nData From: López-Polo, V., Maus, M., Zacharioudakis, E. et al. Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells. Nat Commun 15, 7378 (2024). https://doi.org/10.1038/s41467-024-51363-0\nFig: 1b download data\nkey words:\nPublished methods: xxx\nDesign: Completely Randomized Design with subsampling (CRDS)\nResponse: DNA foci (counts)\nKey learning concepts: right-skewed and heterogenous data with counts\nMore info: Chapter 16 Models for non-independence – linear mixed models"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#tldr",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#tldr",
    "title": "xxx",
    "section": "TL;DR",
    "text": "TL;DR\n\nthe design is actually 2 x 2 factorial but I’ll treat it as if its 4 x 0."
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#the-experiment",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#the-experiment",
    "title": "xxx",
    "section": "The experiment",
    "text": "The experiment"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#setup",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#setup",
    "title": "xxx",
    "section": "Setup",
    "text": "Setup"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#fig-1b",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#fig-1b",
    "title": "xxx",
    "section": "Fig 1b",
    "text": "Fig 1b\n\n\nCode\ndata_from &lt;- \"Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells\"\nfile_name &lt;- \"41467_2024_51363_MOESM4_ESM.xlsx\"\nfile_path &lt;- here(data_folder, data_from, file_name)\n\nread_fig1b &lt;- function(\n    range_in = \"B5:C25\",\n    label_in = \"IMR-90\"\n){\n  read_excel(file_path,\n             sheet = \"1b\",\n             range = range_in,\n             col_names = TRUE) |&gt;\n    data.table() |&gt;\n    melt(variable.name = \"treatment\",\n         value.name = \"foci\") |&gt;\n    na.omit()\n}\nfig1b &lt;- data.table(NULL)\nfig1b &lt;- rbind(\n  fig1b,\n  data.table(\n    cell_type = \"IMR-90\",\n    read_fig1b(range_in = \"B5:C25\")\n  )\n)\nfig1b &lt;- rbind(\n  fig1b,\n  data.table(\n    cell_type = \"SK-MEL-103\",\n    read_fig1b(range_in = \"E5:F55\")\n  )\n)\nfig1b &lt;- rbind(\n  fig1b,\n  data.table(\n    cell_type = \"A549\",\n    read_fig1b(range_in = \"H5:I22\")\n  )\n)\n\n\n# output as clean excel file\nfileout_name &lt;- \"fig1b-2x0 counts-Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.xlsx\"\nfileout_path &lt;- here(data_folder, data_from, fileout_name)\nwrite_xlsx(fig1b, fileout_path)"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#replicate-the-results-linear-model-equivalents-of-t-tests",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#replicate-the-results-linear-model-equivalents-of-t-tests",
    "title": "xxx",
    "section": "Replicate the results – linear model equivalents of t-tests",
    "text": "Replicate the results – linear model equivalents of t-tests\n\n\nCode\n# lm1 &lt;- lm(foci ~ treatment, cell_type == \"IMR-90\", data = fig1b)\n# huh, I mindlessly used this spec of cell_type and only realized after that it actually worked. This is really nice!\n\nlm1 &lt;- lm(foci ~ treatment, data = fig1b[cell_type == \"IMR-90\", ])\ncoef(summary(lm1))\n\n\n                      Estimate Std. Error  t value     Pr(&gt;|t|)\n(Intercept)           64.38889   38.75754 1.661325 0.1053338398\ntreatmentDoxorubicin 199.56111   53.42358 3.735450 0.0006473833\n\n\nCode\nlm2 &lt;- lm(foci ~ treatment, cell_type == \"SK-MEL-103\", data = fig1b)\ncoef(summary(lm2))\n\n\n                     Estimate Std. Error  t value     Pr(&gt;|t|)\n(Intercept)          154.9000   20.85510 7.427438 2.589081e-10\ntreatmentPalbociclib 127.1526   39.74295 3.199376 2.105030e-03\n\n\nCode\nlm3 &lt;- lm(foci ~ treatment, cell_type == \"A549\", data = fig1b)\ncoef(summary(lm3))\n\n\n                   Estimate Std. Error  t value     Pr(&gt;|t|)\n(Intercept)        168.8824   58.07871 2.907819 7.716990e-03\ntreatmentBleomycin 545.1176   98.71483 5.522146 1.115282e-05\n\n\nA Student’s (equal variance) t-test replicates the p-values.\nLet’s check the models\n\n\nCode\nggcheck_the_model(lm1) # compare to above\n\n\n\n\n\n\n\n\n\nCode\nggcheck_the_model(lm2)\n\n\n\n\n\n\n\n\n\nCode\nggcheck_the_model(lm3)\n\n\n\n\n\n\n\n\n\nThe all have QQ plots showing right skew expected of count data and lm1 and lm2 are quite severe. All have spread plots showing variance increasing with mean, expected of count data. Certainly a count glm model is best model to fit."
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#better-than-reproducibility-of-fig1b",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#better-than-reproducibility-of-fig1b",
    "title": "xxx",
    "section": "Better than reproducibility of fig1b",
    "text": "Better than reproducibility of fig1b\n\n\nCode\nfs_chunk &lt;- 9\n# IMR-90 cell type\nglm1 &lt;- glm(foci ~ treatment,\n            family = quasipoisson(link = \"log\"),\n            data = fig1b[cell_type == \"IMR-90\", ])\nglm1_emm &lt;- emmeans(glm1, specs = \"treatment\", type = \"response\")\nglm1_pairs &lt;- contrast(glm1_emm,\n                       method = \"revpairwise\") |&gt;\n  summary(infer = TRUE)\ngg1 &lt;- plot_response(glm1, glm1_emm, glm1_pairs,\n              jitter_type = \"density\",\n              y_label = \"dsRNA foci per cell\",\n              font_size = 10) +\n  ggtitle(\"IMR-90\")\n\n# SK-MEL-103 cell type\nglm2 &lt;- glm(foci ~ treatment,\n            family = quasipoisson(link = \"log\"),\n            data = fig1b[cell_type == \"SK-MEL-103\", ])\nglm2_emm &lt;- emmeans(glm2, specs = \"treatment\", type = \"response\")\nglm2_pairs &lt;- contrast(glm2_emm,\n                       method = \"revpairwise\") |&gt;\n  summary(infer = TRUE)\ngg2 &lt;- plot_response(glm2, glm2_emm, glm2_pairs,\n              jitter_type = \"density\",\n              y_label = \"dsRNA foci per cell\",\n              font_size = 10) +\n  ggtitle(\"SK-MEL-103\")\n\n# A549 cell type\nglm3 &lt;- glm(foci ~ treatment,\n            family = quasipoisson(link = \"log\"),\n            data = fig1b[cell_type == \"A549\", ])\nglm3_emm &lt;- emmeans(glm3, specs = \"treatment\", type = \"response\")\nglm3_pairs &lt;- contrast(glm3_emm,\n                       method = \"revpairwise\") |&gt;\n  summary(infer = TRUE)\ngg3 &lt;- plot_response(glm3, glm3_emm, glm3_pairs,\n              jitter_type = \"density\",\n              y_label = \"dsRNA foci per cell\",\n              font_size = 10) +\n  ggtitle(\"A549\")\n\ngg &lt;- plot_grid(gg1, gg2, gg3, ncol = 3)\n\n#| fig-width: 4\n\npngfile &lt;- fs::path(knitr::fig_path(), \"gg.png\")\n#agg_png(pngfile, width = 6, height = .618*6, units = \"in\", res = 300, scaling = 2)\nagg_png(pngfile, width = 60*.5, height = 27*.5, units = \"cm\", res = 96, scaling = 1)\nplot(gg)\ninvisible(dev.off())\nknitr::include_graphics(pngfile)"
  },
  {
    "objectID": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#a-simulation",
    "href": "drafts/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells/Release of mitochondrial dsRNA into the cytosol is a key driver of the inflammatory phenotype of senescent cells.html#a-simulation",
    "title": "xxx",
    "section": "A simulation",
    "text": "A simulation\n\n\nCode\n# parameters of observed data\nglm2.nb &lt;- glm.nb(foci ~ treatment,\n            data = fig1b[cell_type == \"SK-MEL-103\", ])\ntheta_obs &lt;- glm2.nb$theta\nmu_obs &lt;- exp(coef(summary(glm2.nb))[\"(Intercept)\", \"Estimate\"])\n# what this looks like with a big sample\nset.seed(1)\ngghistogram(rnegbin(1000, mu = mu_obs, theta = theta_obs))\n\n\n\n\n\n\n\n\n\n\n\nCode\np_less &lt;- function(x, alpha = 0.05){\n  sum(x &lt; alpha)/length(x)\n}\n\nsimulate_it &lt;- FALSE\nif(simulate_it == TRUE){\n  # have to run this twice to do either effect of theta or effect of n on type 1/power\n  # because I didn't want all combos of each set\n  n_iter &lt;- 10000\n  theta_or_n &lt;- \"theta\"\n  if(theta_or_n == \"theta\"){\n    theta_set &lt;- c(0.5, 1, 2, 4)\n    n_set &lt;- 30\n  }else{ # n\n    theta_set &lt;- 1\n    n_set &lt;- c(5, 10, 15, 20, 25, 30)\n  }\n  mu_sim &lt;- mu_obs\n  \n  test_set &lt;- c(\"LM\", \"LogLM\", \"MW\", \"NB\", \"QP\")\n  p_mat &lt;- matrix(NA, nrow = n_iter, ncol = length(test_set))\n  colnames(p_mat) &lt;- test_set\n  type1_table &lt;- data.table(NULL)\n  power_table &lt;- data.table(NULL)\n  \n  # type 1\n  for(n in n_set){\n    fd &lt;- data.table(\n      treatment = rep(c(\"Cn\", \"Tr\"), each = n),\n      foci = NA\n    )\n    for(theta_sim in theta_set){\n      fake_y &lt;- rnegbin(n * 2 * n_iter, mu = mu_sim, theta = theta_sim)\n      y_mat &lt;- matrix(fake_y, nrow = n * 2, ncol = n_iter)\n      for(iter in 1:n_iter){\n        fd[, foci := y_mat[, iter]]\n        \n        lm1 &lt;- lm(foci ~ treatment, data = fd)\n        p_mat[iter, \"LM\"] &lt;- coef(summary(lm1))[2, \"Pr(&gt;|t|)\"]\n        \n        loglm1 &lt;- lm(log(foci+1) ~ treatment, data = fd)\n        p_mat[iter, \"LogLM\"] &lt;- coef(summary(loglm1))[2, \"Pr(&gt;|t|)\"]\n        \n        mw &lt;- wilcox.test(foci ~ treatment, data = fd, exact = FALSE)\n        p_mat[iter, \"MW\"] &lt;- mw$p.value\n        \n        glm1.nb &lt;- glm.nb(foci ~ treatment, data = fd)\n        # glm1.nb &lt;- glmmTMB(foci ~ treatment,\n        #                    family = nbinom2(link = \"log\"), # variance increases quadratically\n        #                    data = fd)\n        glm1.pairs &lt;- emmeans(glm1.nb, specs = \"treatment\") |&gt;\n          contrast(method = \"revpairwise\") |&gt;\n          summary()\n        p_mat[iter, \"NB\"] &lt;- glm1.pairs[1, \"p.value\"]\n        \n        glm2.qp &lt;- glm(foci ~ treatment,\n                       family = quasipoisson(link = \"log\"),\n                       data = fd)\n        # glm2.qp &lt;- glmmTMB(foci ~ treatment,\n        #                    family = nbinom1(link = \"log\"), # variance increases linearly\n        #                    data = fd)\n        glm2.pairs &lt;- emmeans(glm2.qp, specs = \"treatment\") |&gt;\n          contrast(method = \"revpairwise\") |&gt;\n          summary()\n        p_mat[iter, \"QP\"] &lt;- glm2.pairs[1, \"p.value\"]\n      }\n      type1_table = rbind(type1_table, t(c(theta = theta_sim, N = n, apply(p_mat, 2, p_less))))\n    }\n  }\n  \n  # power\n  p_mat &lt;- matrix(NA, nrow = n_iter, ncol = length(test_set))\n  colnames(p_mat) &lt;- test_set\n  power_table &lt;- data.table(NULL)\n  delta &lt;- 2\n  for(n in n_set){\n    fd &lt;- data.table(\n      treatment = rep(c(\"Cn\", \"Tr\"), each = n),\n      foci = NA\n    )\n    for(theta_sim in theta_set){\n      # cn\n      fake_cn &lt;- rnegbin(n * n_iter, mu = mu_sim, theta = theta_sim)\n      fake_tr &lt;- rnegbin(n * n_iter, mu = mu_sim * delta, theta = theta_sim)\n      y_mat &lt;- rbind(matrix(fake_cn, nrow = n, ncol = n_iter),\n                     matrix(fake_tr, nrow = n, ncol = n_iter))\n      for(iter in 1:n_iter){\n        fd[, foci := y_mat[, iter]]\n        \n        lm1 &lt;- lm(foci ~ treatment, data = fd)\n        p_mat[iter, \"LM\"] &lt;- coef(summary(lm1))[2, \"Pr(&gt;|t|)\"]\n        \n        loglm1 &lt;- lm(log(foci+1) ~ treatment, data = fd)\n        p_mat[iter, \"LogLM\"] &lt;- coef(summary(loglm1))[2, \"Pr(&gt;|t|)\"]\n        \n        mw &lt;- wilcox.test(foci ~ treatment, data = fd, exact = FALSE)\n        p_mat[iter, \"MW\"] &lt;- mw$p.value\n        \n        glm1.nb &lt;- glm.nb(foci ~ treatment, data = fd)\n        # glm1.nb &lt;- glmmTMB(foci ~ treatment,\n        #                    family = nbinom2(link = \"log\"), # variance increases quadratically\n        #                    data = fd)\n        glm1.pairs &lt;- emmeans(glm1.nb, specs = \"treatment\") |&gt;\n          contrast(method = \"revpairwise\") |&gt;\n          summary()\n        p_mat[iter, \"NB\"] &lt;- glm1.pairs[1, \"p.value\"]\n        \n        glm2.qp &lt;- glm(foci ~ treatment,\n                       family = quasipoisson(link = \"log\"),\n                       data = fd)\n        # glm2.qp &lt;- glmmTMB(foci ~ treatment,\n        #                    family = nbinom1(link = \"log\"), # variance increases linearly\n        #                    data = fd)\n        glm2.pairs &lt;- emmeans(glm2.qp, specs = \"treatment\") |&gt;\n          contrast(method = \"revpairwise\") |&gt;\n          summary()\n        p_mat[iter, \"QP\"] &lt;- glm2.pairs[1, \"p.value\"]\n      }\n      \n      power_table = rbind(power_table, t(c(theta = theta_sim, N = n, apply(p_mat, 2, p_less))))\n    }\n  }\n  \n  type1_table |&gt;\n    kable(digits = 3) |&gt;\n    kable_styling()\n  \n  power_table |&gt;\n    kable(digits = 3) |&gt;\n    kable_styling()\n  \nsave_it &lt;- FALSE\nif(save_it == TRUE & theta_or_n == \"theta\"){\n  saveRDS(type1_table, \"type1_table-theta_varies-10k_iter.Rds\")\n  saveRDS(power_table, \"power_table-theta_varies-10k_iter.Rds\")\n}\nif(save_it == TRUE & theta_or_n == \"n\"){\n  saveRDS(type1_table, \"type1_table-n_varies-10k_iter.Rds\")\n  saveRDS(power_table, \"power_table-n_varies-10k_iter.Rds\")\n}\n}\n\n\n\n\nCode\ntype1_table_theta &lt;- readRDS(\"type1_table-theta_varies-10k_iter.Rds\")\npower_table_theta &lt;- readRDS(\"power_table-theta_varies-10k_iter.Rds\")\ntype1_table_n &lt;- readRDS(\"type1_table-n_varies-10k_iter.Rds\")\npower_table_n &lt;- readRDS(\"power_table-n_varies-10k_iter.Rds\")\n\n\n\n\nCode\ntype1_table_long &lt;- melt(type1_table_theta,\n                         id.vars = c(\"theta\", \"N\"),\n                         variable.name = \"test\",\n                         value.name = \"Type_I\")\nggplot(data = type1_table_long,\n       aes(x = theta,\n           y = Type_I,\n           color = test)) +\n  geom_hline(yintercept = 0.05, color = \"gray\") +\n  geom_point() +\n  geom_line() +\n  theme_pubr()\n\n\n\n\n\n\n\n\n\nCode\npower_table_long &lt;- melt(power_table_theta,\n                         id.vars = c(\"theta\", \"N\"),\n                         variable.name = \"test\",\n                         value.name = \"Power\")\nggplot(data = power_table_long,\n       aes(x = theta,\n           y = Power,\n           color = test)) +\n  geom_hline(yintercept = 0.05, color = \"gray\") +\n  geom_point() +\n  geom_line() +\n  theme_pubr()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntype1_table_long &lt;- melt(type1_table_n,\n                         id.vars = c(\"theta\", \"N\"),\n                         variable.name = \"test\",\n                         value.name = \"Type_I\")\nggplot(data = type1_table_long,\n       aes(x = N,\n           y = Type_I,\n           color = test)) +\n  geom_hline(yintercept = 0.05, color = \"gray\") +\n  geom_point() +\n  geom_line() +\n  theme_pubr()\n\n\n\n\n\n\n\n\n\nCode\npower_table_long &lt;- melt(power_table_n,\n                         id.vars = c(\"theta\", \"N\"),\n                         variable.name = \"test\",\n                         value.name = \"Power\")\nggplot(data = power_table_long,\n       aes(x = N,\n           y = Power,\n           color = test)) +\n  geom_hline(yintercept = 0.05, color = \"gray\") +\n  geom_point() +\n  geom_line() +\n  theme_pubr()"
  }
]